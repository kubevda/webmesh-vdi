{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The purpose of this API is to provide resources to the user frontend of kVDI, however it can also be used for programatic management of the cluster.",
    "title": "kVDI API.",
    "license": {
      "name": "GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007"
    }
  },
  "basePath": "/",
  "paths": {
    "/api/authorize": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authorizes a JWT token with a one time password.",
        "operationId": "authorizeRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AuthorizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/sessionResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "summary": "Retrieves the current VDICluster configuration.",
        "operationId": "getConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/configResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/desktops/fs/{namespace}/{name}/get/{fpath}": {
      "get": {
        "tags": [
          "Desktops"
        ],
        "summary": "Download the given file from a desktop session.",
        "operationId": "downloadDesktopFile",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The file path to download",
            "name": "fpath",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/desktops/fs/{namespace}/{name}/put": {
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "Desktops"
        ],
        "summary": "Uploads a file to a desktop session.",
        "operationId": "putDesktopFile",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData"
          }
        ]
      }
    },
    "/api/desktops/fs/{namespace}/{name}/stat/{fpath}": {
      "get": {
        "tags": [
          "Desktops"
        ],
        "summary": "Retrieve filesystem info for the given path inside a desktop session.",
        "operationId": "statDesktopFile",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The path to retrieve information about",
            "name": "fpath",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/desktops/ws/{namespace}/{name}/audio": {
      "get": {
        "tags": [
          "Desktops"
        ],
        "summary": "Retrieve the audio stream from the given desktop session.",
        "operationId": "doAudio",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The X-Session-Token of the requesting client. Can also be provided in the header.",
            "name": "token",
            "in": "query"
          }
        ]
      }
    },
    "/api/desktops/ws/{namespace}/{name}/display": {
      "get": {
        "description": "Assumes the requesting client is a noVNC RFB object.",
        "tags": [
          "Desktops"
        ],
        "summary": "Start an mTLS noVNC connection with the provided Desktop.",
        "operationId": "doWebsocket",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The X-Session-Token of the requesting client",
            "name": "token",
            "in": "query",
            "required": true
          }
        ]
      }
    },
    "/api/desktops/ws/{namespace}/{name}/logs/{container}": {
      "get": {
        "tags": [
          "Desktops"
        ],
        "summary": "Follow the logs for a desktop over a websocket.",
        "operationId": "getLogsWebsocket",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The container to retrieve logs for. Can be 'kvdi-proxy' or 'desktop'.",
            "name": "container",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The X-Session-Token of the requesting client.",
            "name": "token",
            "in": "query",
            "required": true
          }
        ]
      }
    },
    "/api/desktops/ws/{namespace}/{name}/status": {
      "get": {
        "description": "Details include the PodPhase and CRD status.",
        "tags": [
          "Desktops"
        ],
        "summary": "Retrieve status updates of the requested desktop session over a websocket.",
        "operationId": "getSessionStatusWs",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/desktops/{namespace}/{name}/logs/{container}": {
      "get": {
        "tags": [
          "Desktops"
        ],
        "summary": "Retrieve the logs for a container in a desktop session.",
        "operationId": "getLogs",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The container to retrieve logs for. Can be 'kvdi-proxy' or 'desktop'.",
            "name": "container",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Retrieves a new JWT token. This route may behave differently depending on the auth provider.",
        "operationId": "loginRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/sessionResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Ends the current user session.",
        "operationId": "logout",
        "responses": {
          "200": {
            "$ref": "#/responses/boolResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/namespaces": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "summary": "Retrieves a list of namespaces the requesting user is allowed to provision desktops in.",
        "operationId": "getNamespaces",
        "responses": {
          "200": {
            "$ref": "#/responses/namespacesResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/refresh_token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Retrieves a new JWT access token. It uses the HttpOnly cookie included in the request.",
        "operationId": "refreshTokenRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/sessionResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Retrieves a list of the authorization roles in kVDI.",
        "operationId": "getRoles",
        "responses": {
          "200": {
            "$ref": "#/responses/rolesResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new role in kVDI.",
        "operationId": "postRoleRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/boolResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/roles/{role}": {
      "get": {
        "description": "Details include the grants, namespaces, and template patterns for the role.",
        "tags": [
          "Roles"
        ],
        "summary": "Retrieve the specified role.",
        "operationId": "getRole",
        "parameters": [
          {
            "type": "string",
            "description": "The role to retrieve details about",
            "name": "role",
            "in": "path",
            "required": true
          }
        ]
      },
      "put": {
        "description": "All properties will be overwritten with those provided in the payload, even if undefined.",
        "tags": [
          "Roles"
        ],
        "summary": "Update the specified role.",
        "operationId": "putRoleRequest",
        "parameters": [
          {
            "type": "string",
            "description": "The role to update",
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRoleRequest"
            }
          },
          {
            "$ref": "#/definitions/UpdateRoleRequest",
            "description": "The role details to update.",
            "name": "roleDetails",
            "in": "body"
          }
        ]
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete the specified role.",
        "operationId": "deleteRoleRequest",
        "parameters": [
          {
            "type": "string",
            "description": "The role to delete",
            "name": "role",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/serviceaccounts/{namespace}": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "summary": "Retrieve the service accounts in the given namespace that the user is allowed to use",
        "operationId": "getServiceAccounts",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace to list service accounts in",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Retrieves a list of currently active desktop sessions and their status.",
        "operationId": "getDesktopSessions",
        "responses": {
          "200": {
            "$ref": "#/responses/desktopSessionsResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Creates a new desktop session with the given parameters.",
        "operationId": "postSessionRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postSessionResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/sessions/{namespace}/{name}": {
      "get": {
        "description": "Details include the PodPhase and CRD status.",
        "tags": [
          "Sessions"
        ],
        "summary": "Retrieve the status of the requested desktop session.",
        "operationId": "getSession",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          }
        ]
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Destroys the provided desktop session.",
        "operationId": "deleteSession",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace of the desktop session",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The name of the desktop session",
            "name": "name",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieves available templates to boot desktops from.",
        "operationId": "getTemplates",
        "responses": {
          "200": {
            "$ref": "#/responses/templatesResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create a new DesktopTemplate in kVDI.",
        "operationId": "postTemplateRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/boolResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/templates/{template}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieve the specified DesktopTemplate.",
        "operationId": "getTemplate",
        "parameters": [
          {
            "type": "string",
            "description": "The DesktopTemplate to retrieve details about",
            "name": "template",
            "in": "path",
            "required": true
          }
        ]
      },
      "put": {
        "description": "Only attributes defined in the payload will be applied.",
        "tags": [
          "Templates"
        ],
        "summary": "Update the specified DesktopTemplate.",
        "operationId": "putTemplateRequest",
        "parameters": [
          {
            "type": "string",
            "description": "The DesktopTemplate to update",
            "name": "template",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Template"
            }
          },
          {
            "$ref": "#/definitions/DesktopTemplate",
            "description": "The manifest to merge with the existing template.",
            "name": "templateDetails",
            "in": "body"
          }
        ]
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Delete the specified DesktopTemplate.",
        "operationId": "deleteTemplateRequest",
        "parameters": [
          {
            "type": "string",
            "description": "The DesktopTemplate to delete",
            "name": "template",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves all the users currently known to kVDI.",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "$ref": "#/responses/usersResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user in kVDI.",
        "operationId": "postUserRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/boolResponse"
          },
          "400": {
            "$ref": "#/responses/error"
          },
          "403": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/api/users/{user}": {
      "get": {
        "description": "Details include the roles and grants for the user.",
        "tags": [
          "Users"
        ],
        "summary": "Retrieve the specified user.",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "string",
            "description": "The username to retrieve details about",
            "name": "user",
            "in": "path",
            "required": true
          }
        ]
      },
      "put": {
        "description": "Only the provided attributes will be updated.",
        "tags": [
          "Users"
        ],
        "summary": "Update the specified user.",
        "operationId": "putUserRequest",
        "parameters": [
          {
            "type": "string",
            "description": "The user to update",
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRequest"
            }
          },
          {
            "$ref": "#/definitions/UpdateUserRequest",
            "description": "The user details to update.",
            "name": "userDetails",
            "in": "body"
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete the specified user.",
        "operationId": "deleteUserRequest",
        "parameters": [
          {
            "type": "string",
            "description": "The user to delete",
            "name": "user",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/users/{user}/mfa": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves MFA status for the given user.",
        "operationId": "getUserMFARequest",
        "parameters": [
          {
            "type": "string",
            "description": "The user to query",
            "name": "user",
            "in": "path",
            "required": true
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates MFA configuration for the specified user.",
        "operationId": "putUserMFARequest",
        "parameters": [
          {
            "type": "string",
            "description": "The user to update",
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMFARequest"
            }
          },
          {
            "$ref": "#/definitions/UpdateMFARequest",
            "description": "The user details to update.",
            "name": "putUserMFARequest",
            "in": "body"
          }
        ]
      }
    },
    "/api/users/{user}/mfa/verify": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Verifies the MFA setup for the given user.",
        "operationId": "putUserMFAVerifyRequest",
        "parameters": [
          {
            "type": "string",
            "description": "The user to verify MFA for",
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/definitions/AuthorizeRequest",
            "description": "The MFA token generated by the app",
            "name": "body",
            "in": "body"
          }
        ]
      }
    },
    "/api/whoami": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "summary": "Retrieves information about the current user session.",
        "operationId": "whoAmI",
        "responses": {
          "200": {
            "$ref": "#/responses/userResponse"
          },
          "403": {
            "$ref": "#/responses/error"
          },
          "500": {
            "$ref": "#/responses/error"
          }
        }
      }
    }
  },
  "definitions": {
    "APIError": {
      "description": "APIError is for errors from the API server. It's main purpose\nis to provide a quick interface for returning json encoded error\nmessages",
      "type": "object",
      "properties": {
        "error": {
          "description": "A message describing the error",
          "type": "string",
          "x-go-name": "ErrMsg"
        },
        "status": {
          "$ref": "#/definitions/ErrorStatus"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/util/errors"
    },
    "AWSElasticBlockStoreVolumeSource": {
      "description": "An AWS EBS disk must exist before mounting to a container. The disk\nmust also be in the same AWS zone as the kubelet. An AWS EBS disk\ncan only be mounted as read/write once. AWS EBS volumes support\nownership management and SELinux relabeling.",
      "type": "object",
      "title": "Represents a Persistent Disk resource in AWS.",
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "partition": {
          "description": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Partition"
        },
        "readOnly": {
          "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\".\nIf omitted, the default is \"false\".\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "volumeID": {
          "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string",
          "x-go-name": "VolumeID"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "AppConfig": {
      "description": "AppConfig represents app configurations for the VDI cluster",
      "type": "object",
      "properties": {
        "auditLog": {
          "description": "Whether to log auditing events to stdout",
          "type": "boolean",
          "x-go-name": "AuditLog"
        },
        "corsEnabled": {
          "description": "Whether to add CORS headers to API requests",
          "type": "boolean",
          "x-go-name": "CORSEnabled"
        },
        "image": {
          "description": "The image to use for the app instances. Defaults to the public image\nmatching the version of the currently running manager.",
          "type": "string",
          "x-go-name": "Image"
        },
        "replicas": {
          "description": "The number of app replicas to run",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Replicas"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "serviceAnnotations": {
          "description": "Extra annotations to apply to the app service.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "ServiceAnnotations"
        },
        "serviceType": {
          "$ref": "#/definitions/ServiceType"
        },
        "tls": {
          "$ref": "#/definitions/TLSConfig"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "AuthConfig": {
      "description": "AuthConfig will be for authentication driver configurations. The goal\nis to support multiple backends, e.g. local, oauth, ldap, etc.",
      "type": "object",
      "properties": {
        "adminSecret": {
          "description": "A secret where a generated admin password will be stored",
          "type": "string",
          "x-go-name": "AdminSecret"
        },
        "allowAnonymous": {
          "description": "Allow anonymous users to create desktop instances",
          "type": "boolean",
          "x-go-name": "AllowAnonymous"
        },
        "defaultRoleRules": {
          "description": "The rules to apply to the default role created for this cluster. These are the rules applied to\nanonymous users (if allowed) and non-grouped OIDC users. They can also be used for convenience\nwhen getting started. The defaults only allow for launching templates in the `appNamespace`.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-go-name": "DefaultRoleRules"
        },
        "ldapAuth": {
          "$ref": "#/definitions/LDAPConfig"
        },
        "localAuth": {
          "$ref": "#/definitions/LocalAuthConfig"
        },
        "oidcAuth": {
          "$ref": "#/definitions/OIDCConfig"
        },
        "tokenDuration": {
          "description": "How long issued access tokens should be valid for. When using OIDC auth\nyou may want to set this to a higher value (e.g. 8-10h) since the refresh token\nflow will not be able to lookup a user's grants from the provider. Defaults to `15m`.",
          "type": "string",
          "x-go-name": "TokenDuration"
        },
        "webmeshAuth": {
          "$ref": "#/definitions/WebmeshConfig"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "AuthorizeRequest": {
      "type": "object",
      "title": "AuthorizeRequest is a request with an OTP for receiving an authorized token.",
      "properties": {
        "otp": {
          "description": "The one-time password",
          "type": "string",
          "x-go-name": "OTP"
        },
        "state": {
          "description": "The state secret for the request flow",
          "type": "string",
          "x-go-name": "State"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "AzureDataDiskCachingMode": {
      "type": "string",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "AzureDataDiskKind": {
      "type": "string",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "AzureDiskVolumeSource": {
      "type": "object",
      "title": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "properties": {
        "cachingMode": {
          "$ref": "#/definitions/AzureDataDiskCachingMode"
        },
        "diskName": {
          "description": "The Name of the data disk in the blob storage",
          "type": "string",
          "x-go-name": "DiskName"
        },
        "diskURI": {
          "description": "The URI the data disk in the blob storage",
          "type": "string",
          "x-go-name": "DataDiskURI"
        },
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "kind": {
          "$ref": "#/definitions/AzureDataDiskKind"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "AzureFileVolumeSource": {
      "type": "object",
      "title": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "properties": {
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretName": {
          "description": "the name of secret that contains Azure Storage Account Name and Key",
          "type": "string",
          "x-go-name": "SecretName"
        },
        "shareName": {
          "description": "Share Name",
          "type": "string",
          "x-go-name": "ShareName"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "CSIVolumeSource": {
      "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
      "type": "object",
      "properties": {
        "driver": {
          "description": "Driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
          "type": "string",
          "x-go-name": "Driver"
        },
        "fsType": {
          "description": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "readOnly": {
          "description": "Specifies a read-only configuration for the volume.\nDefaults to false (read/write).\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "volumeAttributes": {
          "description": "VolumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "VolumeAttributes"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "Capability": {
      "description": "Capability represent POSIX capabilities type",
      "type": "string",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "CephFSVolumeSource": {
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod\nCephfs volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "properties": {
        "monitors": {
          "description": "Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Monitors"
        },
        "path": {
          "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional",
          "type": "string",
          "x-go-name": "Path"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretFile": {
          "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional",
          "type": "string",
          "x-go-name": "SecretFile"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "user": {
          "description": "Optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional",
          "type": "string",
          "x-go-name": "User"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "CinderVolumeSource": {
      "description": "A Cinder volume must exist before mounting to a container.\nThe volume must also be in the same region as the kubelet.\nCinder volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Represents a cinder volume resource in Openstack.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "volumeID": {
          "description": "volume id used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string",
          "x-go-name": "VolumeID"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ConfigMapKeySelector": {
      "description": "+structType=atomic",
      "type": "object",
      "title": "Selects a key from a ConfigMap.",
      "properties": {
        "key": {
          "description": "The key to select.",
          "type": "string",
          "x-go-name": "Key"
        },
        "name": {
          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its key must be defined\n+optional",
          "type": "boolean",
          "x-go-name": "Optional"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ConfigMapProjection": {
      "description": "The contents of the target ConfigMap's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names,\nunless the items element is populated with specific mappings of keys to paths.\nNote that this is identical to a configmap volume source without the default\nmode.",
      "type": "object",
      "title": "Adapts a ConfigMap into a projected volume.",
      "properties": {
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          },
          "x-go-name": "Items"
        },
        "name": {
          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its keys must be defined\n+optional",
          "type": "boolean",
          "x-go-name": "Optional"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ConfigMapVolumeSource": {
      "description": "The contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Adapts a ConfigMap into a volume.",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "DefaultMode"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          },
          "x-go-name": "Items"
        },
        "name": {
          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its keys must be defined\n+optional",
          "type": "boolean",
          "x-go-name": "Optional"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ConnectionStatus": {
      "type": "object",
      "title": "ConnectionStatus describes the connection status of a desktop's display or audio.",
      "properties": {
        "clientAddr": {
          "description": "The address of the client connected to the stream.",
          "type": "string",
          "x-go-name": "ClientAddr"
        },
        "connected": {
          "description": "Whether or not a client is connected to the stream.",
          "type": "boolean",
          "x-go-name": "Connected"
        },
        "proxyPod": {
          "description": "The app instance handling the proxy for this stream.",
          "type": "string",
          "x-go-name": "ProxyPod"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "CreateRoleRequest": {
      "type": "object",
      "title": "CreateRoleRequest represents a request for a new role.",
      "properties": {
        "annotations": {
          "description": "Annotations to apply to the role",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "name": {
          "description": "The name of the new role",
          "type": "string",
          "x-go-name": "Name"
        },
        "rules": {
          "description": "Rules to apply to the new role.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-go-name": "Rules"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "CreateSessionRequest": {
      "type": "object",
      "title": "CreateSessionRequest requests a new desktop session with the givin parameters.",
      "properties": {
        "namespace": {
          "description": "The namespace to launch the template in. Defaults to default.",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "serviceAccount": {
          "description": "A service account to tie to the desktop session. Defaults to none.",
          "type": "string",
          "x-go-name": "ServiceAccount"
        },
        "template": {
          "description": "The template to create the session from.",
          "type": "string",
          "x-go-name": "Template"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "CreateSessionResponse": {
      "description": "CreateSessionResponse returns the name of the Desktop and what namespace\nit is running in.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "CreateUserRequest": {
      "description": "CreateUserRequest represents a request to create a new user. Not all auth\nproviders will be able to implement this route and can instead return an\nerror describing why.",
      "type": "object",
      "properties": {
        "password": {
          "description": "The password for the new user.",
          "type": "string",
          "x-go-name": "Password"
        },
        "roles": {
          "description": "Roles to assign the new user. These are the names of VDIRoles in the cluster.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Roles"
        },
        "username": {
          "description": "The user name for the new user.",
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "DNSPolicy": {
      "type": "string",
      "title": "DNSPolicy defines how a pod's DNS will be configured.",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "DesktopConfig": {
      "description": "DesktopConfig represents configurations for the template and desktops booted\nfrom it.",
      "type": "object",
      "properties": {
        "allowRoot": {
          "description": "AllowRoot will pass the ENABLE_ROOT envvar to the container. In the Dockerfiles\nin this repository, this will add the user to the sudo group and ability to\nsudo with no password.",
          "type": "boolean",
          "x-go-name": "AllowRoot"
        },
        "capabilities": {
          "description": "Extra system capabilities to add to desktops booted from this template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "x-go-name": "Capabilities"
        },
        "dnsConfig": {
          "$ref": "#/definitions/PodDNSConfig"
        },
        "dnsPolicy": {
          "$ref": "#/definitions/DNSPolicy"
        },
        "env": {
          "description": "Additional environment variables to pass to containers booted from this template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvVar"
          },
          "x-go-name": "Env"
        },
        "envTemplates": {
          "description": "Optionally map additional information about the user (and potentially extended further\nin the future) into the environment of desktops booted from this template. The keys in the\nmap are the environment variable to set inside the desktop, and the values are go templates\nor strings to set to the value. Currently the go templates are only passed a `Session` object\ncontaining the information in the claims for the user that created the desktop. For more information\nsee the [JWTCaims object](https://github.com/kvdi/kvdi/blob/main/pkg/types/auth_types.go#L79)\nand corresponding go types.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "EnvTemplates"
        },
        "image": {
          "description": "The docker repository and tag to use for desktops booted from this template.",
          "type": "string",
          "x-go-name": "Image"
        },
        "imagePullPolicy": {
          "$ref": "#/definitions/PullPolicy"
        },
        "init": {
          "$ref": "#/definitions/DesktopInit"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "volumeDevices": {
          "description": "Volume devices for the desktop container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeDevice"
          },
          "x-go-name": "VolumeDevices"
        },
        "volumeMounts": {
          "description": "Volume mounts for the desktop container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          },
          "x-go-name": "VolumeMounts"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/desktops/v1"
    },
    "DesktopInit": {
      "description": "+kubebuilder:validation:Enum=supervisord;systemd",
      "type": "string",
      "title": "DesktopInit represents the init system that the desktop container uses.",
      "x-go-package": "github.com/kvdi/kvdi/apis/desktops/v1"
    },
    "DesktopSession": {
      "type": "object",
      "title": "DesktopSession describes the properties and status of a desktop session.",
      "properties": {
        "name": {
          "description": "The name of the desktop session.",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "The namespace of the desktop session.",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "serviceAccount": {
          "description": "The service account being used by this session.",
          "type": "string",
          "x-go-name": "ServiceAccount"
        },
        "status": {
          "$ref": "#/definitions/DesktopSessionStatus"
        },
        "template": {
          "description": "The template this session is booted from.",
          "type": "string",
          "x-go-name": "Template"
        },
        "user": {
          "description": "The username of the user who owns this session.",
          "type": "string",
          "x-go-name": "User"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "DesktopSessionStatus": {
      "description": "DesktopSessionStatus contains information about the connection status for a session's\ndisplay and audio.",
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#/definitions/ConnectionStatus"
        },
        "display": {
          "$ref": "#/definitions/ConnectionStatus"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "DesktopSessionsResponse": {
      "description": "DesktopSessionsResponse contains a list of desktop sessions and information\nabout their statuses.",
      "type": "object",
      "properties": {
        "sessions": {
          "description": "A list of desktop sessions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DesktopSession"
          },
          "x-go-name": "Sessions"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "DesktopsConfig": {
      "description": "DesktopsConfig represents global configurations for desktop\nsessions.",
      "type": "object",
      "properties": {
        "maxSessionLength": {
          "description": "When configured, desktop sessions will be forcefully terminated when\nthe time limit is reached.",
          "type": "string",
          "x-go-name": "MaxSessionLength"
        },
        "sessionsPerUser": {
          "description": "The maximum number of sessions a user can run at a time. A zero value (or undefined)\nmeans no limit. When using a `userdataSpec`, you might want to set this value to 1 if\nyou aren't using ReadWriteMany volumes. The storage controller would inevitably enforce\nthis behavior anyway, but you would save the `kvdi-manager` some extra work.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "SessionsPerUser"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "DockerInDockerConfig": {
      "description": "DockerInDockerConfig is a configuration for mounting a DinD sidecar with desktops\nbooted from the template. This will provide ephemeral docker daemons and storage\nto sessions.",
      "type": "object",
      "properties": {
        "image": {
          "description": "The image to use for the dind sidecar. Defaults to `docker:dind`.",
          "type": "string",
          "x-go-name": "Image"
        },
        "imagePullPolicy": {
          "$ref": "#/definitions/PullPolicy"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "volumeDevices": {
          "description": "Volume devices for the dind container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeDevice"
          },
          "x-go-name": "VolumeDevices"
        },
        "volumeMounts": {
          "description": "Volume mounts for the dind container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          },
          "x-go-name": "VolumeMounts"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/desktops/v1"
    },
    "DownwardAPIProjection": {
      "description": "Note that this is identical to a downwardAPI volume source without the default\nmode.",
      "type": "object",
      "title": "Represents downward API info for projecting into a projected volume.",
      "properties": {
        "items": {
          "description": "Items is a list of DownwardAPIVolume file\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DownwardAPIVolumeFile"
          },
          "x-go-name": "Items"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "DownwardAPIVolumeFile": {
      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/ObjectFieldSelector"
        },
        "mode": {
          "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Mode"
        },
        "path": {
          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
          "type": "string",
          "x-go-name": "Path"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/ResourceFieldSelector"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "DownwardAPIVolumeSource": {
      "description": "Downward API volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "DownwardAPIVolumeSource represents a volume containing downward API info.",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "DefaultMode"
        },
        "items": {
          "description": "Items is a list of downward API volume file\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DownwardAPIVolumeFile"
          },
          "x-go-name": "Items"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "EmptyDirVolumeSource": {
      "description": "Empty directory volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Represents an empty directory for a pod.",
      "properties": {
        "medium": {
          "$ref": "#/definitions/StorageMedium"
        },
        "sizeLimit": {
          "$ref": "#/definitions/Quantity"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "EnvVar": {
      "type": "object",
      "title": "EnvVar represents an environment variable present in a Container.",
      "properties": {
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string",
          "x-go-name": "Name"
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional",
          "type": "string",
          "x-go-name": "Value"
        },
        "valueFrom": {
          "$ref": "#/definitions/EnvVarSource"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "EnvVarSource": {
      "type": "object",
      "title": "EnvVarSource represents a source for the value of an EnvVar.",
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/ConfigMapKeySelector"
        },
        "fieldRef": {
          "$ref": "#/definitions/ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/ResourceFieldSelector"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/SecretKeySelector"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "EphemeralVolumeSource": {
      "type": "object",
      "title": "Represents an ephemeral volume that is handled by a normal storage driver.",
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/PersistentVolumeClaimTemplate"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ErrorStatus": {
      "description": "ErrorStatus represents a type of API error",
      "type": "string",
      "x-go-package": "github.com/kvdi/kvdi/pkg/util/errors"
    },
    "FCVolumeSource": {
      "description": "Fibre Channel volumes can only be mounted as read/write once.\nFibre Channel volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Represents a Fibre Channel volume.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "lun": {
          "description": "Optional: FC target lun number\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Lun"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "targetWWNs": {
          "description": "Optional: FC target worldwide names (WWNs)\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "TargetWWNs"
        },
        "wwids": {
          "description": "Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "WWIDs"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "FieldsV1": {
      "description": "Each key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map\n'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item\n'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list\n'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "title": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "FileStat": {
      "description": "FileStat contains information about a queried file. Contents will only contain\nnested FileStat objects when this object represents the root of the query.",
      "type": "object",
      "properties": {
        "contents": {
          "description": "When IsDirectory is true, the contents of the directory",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileStat"
          },
          "x-go-name": "Contents"
        },
        "isDirectory": {
          "description": "True if the file is a directory",
          "type": "boolean",
          "x-go-name": "IsDirectory"
        },
        "name": {
          "description": "The name of the file or directory",
          "type": "string",
          "x-go-name": "Name"
        },
        "size": {
          "description": "The size of the file when IsDirectory is false",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Size"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "FlexVolumeSource": {
      "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.",
      "type": "object",
      "properties": {
        "driver": {
          "description": "Driver is the name of the driver to use for this volume.",
          "type": "string",
          "x-go-name": "Driver"
        },
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "options": {
          "description": "Optional: Extra command options if any.\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Options"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "FlockerVolumeSource": {
      "description": "One and only one of datasetName and datasetUUID should be set.\nFlocker volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "title": "Represents a Flocker volume mounted by the Flocker agent.",
      "properties": {
        "datasetName": {
          "description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated\n+optional",
          "type": "string",
          "x-go-name": "DatasetName"
        },
        "datasetUUID": {
          "description": "UUID of the dataset. This is unique identifier of a Flocker dataset\n+optional",
          "type": "string",
          "x-go-name": "DatasetUUID"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "GCEPersistentDiskVolumeSource": {
      "description": "A GCE PD must exist before mounting to a container. The disk must\nalso be in the same GCE project and zone as the kubelet. A GCE PD\ncan only be mounted as read/write once or read-only many times. GCE\nPDs support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Represents a Persistent Disk resource in Google Compute Engine.",
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "partition": {
          "description": "The partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Partition"
        },
        "pdName": {
          "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string",
          "x-go-name": "PDName"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "GitRepoVolumeSource": {
      "description": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.",
      "type": "object",
      "title": "Represents a volume that is populated with the contents of a git repository.\nGit repo volumes do not support ownership management.\nGit repo volumes support SELinux relabeling.",
      "properties": {
        "directory": {
          "description": "Target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.\n+optional",
          "type": "string",
          "x-go-name": "Directory"
        },
        "repository": {
          "description": "Repository URL",
          "type": "string",
          "x-go-name": "Repository"
        },
        "revision": {
          "description": "Commit hash for the specified revision.\n+optional",
          "type": "string",
          "x-go-name": "Revision"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "GlusterfsVolumeSource": {
      "description": "Glusterfs volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "title": "Represents a Glusterfs mount that lasts the lifetime of a pod.",
      "properties": {
        "endpoints": {
          "description": "EndpointsName is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string",
          "x-go-name": "EndpointsName"
        },
        "path": {
          "description": "Path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string",
          "x-go-name": "Path"
        },
        "readOnly": {
          "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "GrafanaConfig": {
      "type": "object",
      "title": "GrafanaConfig contains configuration options for the grafana sidecar.",
      "properties": {
        "enabled": {
          "description": "Set to true to run a grafana sidecar with the app pods. This can be used to visualize\ndata in the prometheus deployment.",
          "type": "boolean",
          "x-go-name": "Enabled"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "HostPathType": {
      "type": "string",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "HostPathVolumeSource": {
      "description": "Host path volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "title": "Represents a host path mapped into a pod.",
      "properties": {
        "path": {
          "description": "Path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string",
          "x-go-name": "Path"
        },
        "type": {
          "$ref": "#/definitions/HostPathType"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ISCSIVolumeSource": {
      "description": "ISCSI volumes can only be mounted as read/write once.\nISCSI volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Represents an ISCSI disk.",
      "properties": {
        "chapAuthDiscovery": {
          "description": "whether support iSCSI Discovery CHAP authentication\n+optional",
          "type": "boolean",
          "x-go-name": "DiscoveryCHAPAuth"
        },
        "chapAuthSession": {
          "description": "whether support iSCSI Session CHAP authentication\n+optional",
          "type": "boolean",
          "x-go-name": "SessionCHAPAuth"
        },
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "initiatorName": {
          "description": "Custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.\n+optional",
          "type": "string",
          "x-go-name": "InitiatorName"
        },
        "iqn": {
          "description": "Target iSCSI Qualified Name.",
          "type": "string",
          "x-go-name": "IQN"
        },
        "iscsiInterface": {
          "description": "iSCSI Interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional",
          "type": "string",
          "x-go-name": "ISCSIInterface"
        },
        "lun": {
          "description": "iSCSI Target Lun number.",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Lun"
        },
        "portals": {
          "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Portals"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "targetPortal": {
          "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
          "type": "string",
          "x-go-name": "TargetPortal"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "K8SSecretConfig": {
      "type": "object",
      "title": "K8SSecretConfig uses a Kubernetes secret to store and retrieve sensitive values.",
      "properties": {
        "secretName": {
          "description": "The name of the secret backing the values. Default is `\u003ccluster-name\u003e-app-secrets`.",
          "type": "string",
          "x-go-name": "SecretName"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "KeyToPath": {
      "type": "object",
      "title": "Maps a string key to a path within a volume.",
      "properties": {
        "key": {
          "description": "The key to project.",
          "type": "string",
          "x-go-name": "Key"
        },
        "mode": {
          "description": "Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Mode"
        },
        "path": {
          "description": "The relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
          "type": "string",
          "x-go-name": "Path"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "LDAPConfig": {
      "description": "LDAPConfig represents the configurations for using LDAP as the authentication\nbackend.",
      "type": "object",
      "properties": {
        "adminGroups": {
          "description": "Group DNs that are allowed administrator access to the cluster. Kubernetes\nadmins will still have the ability to change configurations via the CRDs.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "AdminGroups"
        },
        "bindCredentialsSecret": {
          "description": "If you'd rather create a separate k8s secret (instead of the configured backend)\nfor the LDAP credentials, set its name here. The keys in the secret need to\nbe defined in the other fields still. Default is to use the secret backend.",
          "type": "string",
          "x-go-name": "BindCredentialsSecret"
        },
        "bindPasswordSecretKey": {
          "description": "Similar to the `bindUserDNSecretKey`, but for the location of the password\nsecret. Defaults to `ldap-password`.",
          "type": "string",
          "x-go-name": "BindPasswordSecretKey"
        },
        "bindUserDNSecretKey": {
          "description": "If you want to use the built-in secrets backend (vault or k8s currently),\nset this to either the name of the secret in the vault path (the key must be \"data\" for now), or the key of\nthe secret used in `secrets.k8sSecret.secretName`. In default configurations this is\n`kvdi-app-secrets`. Defaults to `ldap-userdn`.",
          "type": "string",
          "x-go-name": "BindUserDNSecretKey"
        },
        "doStatusCheck": {
          "description": "When set to true, the authentication provider will query the user's attributes for the `userStatusAttribute`\nand make sure it matches the value in `userStatusEnabledValue` before attemtping to bind.",
          "type": "boolean",
          "x-go-name": "DoStatusCheck"
        },
        "tlsCACert": {
          "description": "The base64 encoded CA certificate to use when verifying the TLS certificate of\nthe LDAP server.",
          "type": "string",
          "x-go-name": "TLSCACert"
        },
        "tlsInsecureSkipVerify": {
          "description": "Set to true to skip TLS verification of an `ldaps` connection.",
          "type": "boolean",
          "x-go-name": "TLSInsecureSkipVerify"
        },
        "url": {
          "description": "The URL to the LDAP server.",
          "type": "string",
          "x-go-name": "URL"
        },
        "userGroupsAttribute": {
          "description": "The user attribute use to lookup group membership in LDAP. Defaults to `memberOf`.",
          "type": "string",
          "x-go-name": "UserGroupsAttribute"
        },
        "userIDAttribute": {
          "description": "The user ID attribute to use when looking up a provided username. Defaults to `uid`.\nThis value may be different depending on the LDAP provider. For example, in an Active Directory\nenvironment you may want to set this value to `sAMAccountName`.",
          "type": "string",
          "x-go-name": "UserIDAttribute"
        },
        "userSearchBase": {
          "description": "The base scope to search for users in. Default is to search the entire\ndirectory.",
          "type": "string",
          "x-go-name": "UserSearchBase"
        },
        "userStatusAttribute": {
          "description": "The user attribute to use when querying if an account is active. Defaults to `accountStatus`.\nOnly takes effect if `doStatusCheck` is `true`. A user is considered disabled when the attribute is\nboth present and matches the value in `userStatusDisabledValue`.",
          "type": "string",
          "x-go-name": "UserStatusAttribute"
        },
        "userStatusDisabledValue": {
          "description": "The value for the `userStatusAttribute` that signifies that the user is disabled. Defaults to `inactive`.",
          "type": "string",
          "x-go-name": "UserStatusDisabledValue"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabelSelectorRequirement"
          },
          "x-go-name": "MatchExpressions"
        },
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "MatchLabels"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "LabelSelectorOperator": {
      "type": "string",
      "title": "A label selector operator is the set of operators that can be used in a selector requirement.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
      "type": "object",
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge",
          "type": "string",
          "x-go-name": "Key"
        },
        "operator": {
          "$ref": "#/definitions/LabelSelectorOperator"
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Values"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "LocalAuthConfig": {
      "type": "object",
      "title": "LocalAuthConfig represents a local, 'passwd'-like authentication driver.",
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "LoginRequest": {
      "description": "LoginRequest represents a request for a session token. Different auth providers\nmay not always need this request, and can instead redirect /api/login as needed.\nAll the auth provider needs to do in the end is return a JWT token that contains\na fulfilled VDIUser.\n+k8s:deepcopy-gen=false",
      "type": "object",
      "properties": {
        "password": {
          "description": "Password",
          "type": "string",
          "x-go-name": "Password"
        },
        "state": {
          "description": "State generated by requesting client to prevent CSRF and retrieve tokens\nfrom an oidc flow",
          "type": "string",
          "x-go-name": "State"
        },
        "username": {
          "description": "Username",
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "MFAResponse": {
      "type": "object",
      "title": "MFAResponse contains the response to an UpdateMFARequest or GetMFARequest.",
      "properties": {
        "enabled": {
          "description": "Whether MFA is enabled for the user",
          "type": "boolean",
          "x-go-name": "Enabled"
        },
        "provisioningURI": {
          "description": "If enabled is set, a provisioning URI is also returned.",
          "type": "string",
          "x-go-name": "ProvisioningURI"
        },
        "verified": {
          "description": "If enabled is set, whether or not the user has verified their MFA setup",
          "type": "boolean",
          "x-go-name": "Verified"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
          "type": "string",
          "x-go-name": "FieldsType"
        },
        "fieldsV1": {
          "$ref": "#/definitions/FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string",
          "x-go-name": "Manager"
        },
        "operation": {
          "$ref": "#/definitions/ManagedFieldsOperationType"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
          "type": "string",
          "x-go-name": "Subresource"
        },
        "time": {
          "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional",
          "type": "string",
          "x-go-name": "Time"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "ManagedFieldsOperationType": {
      "type": "string",
      "title": "ManagedFieldsOperationType is the type of operation which lead to a ManagedFieldsEntry being created.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "MetricsConfig": {
      "type": "object",
      "title": "MetricsConfig contains configuration options for gathering metrics.",
      "properties": {
        "grafana": {
          "$ref": "#/definitions/GrafanaConfig"
        },
        "prometheus": {
          "$ref": "#/definitions/PrometheusConfig"
        },
        "serviceMonitor": {
          "$ref": "#/definitions/ServiceMonitorConfig"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "MountPropagationMode": {
      "type": "string",
      "title": "MountPropagationMode describes mount propagation.",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "NFSVolumeSource": {
      "description": "NFS volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "title": "Represents an NFS mount that lasts the lifetime of a pod.",
      "properties": {
        "path": {
          "description": "Path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string",
          "x-go-name": "Path"
        },
        "readOnly": {
          "description": "ReadOnly here will force\nthe NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "server": {
          "description": "Server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string",
          "x-go-name": "Server"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "OIDCConfig": {
      "description": "OIDCConfig represents configurations for using an OIDC/OAuth provider for\nauthentication.",
      "type": "object",
      "properties": {
        "adminGroups": {
          "description": "Groups that are allowed administrator access to the cluster. Kubernetes\nadmins will still have the ability to change rbac configurations via the CRDs.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "AdminGroups"
        },
        "allowNonGroupedReadOnly": {
          "description": "Set to true if the OIDC provider does not support the \"groups\" claim (or any\nvalid alternative) and/or you would like to allow any authenticated user\nread-only access.",
          "type": "boolean",
          "x-go-name": "AllowNonGroupedReadOnly"
        },
        "clientCredentialsSecret": {
          "description": "When creating your own kubernets secret with the `clientIDKey` and `clientSecretKey`,\nset this to the name of the created secret. It must be in the same namespace\nas the manager and app instances. Defaults to `oidc-clientsecret`.",
          "type": "string",
          "x-go-name": "ClientCredentialsSecret"
        },
        "clientIDKey": {
          "description": "When using the built-in secrets backend, the key to where the client-id is\nstored. Set this to either the name of the secret in the vault path (the key must be \"data\" for now),\nor the key of the secret used in `secrets.k8sSecret.secretName`. When configuring `clientCredentialsSecret`,\nset this to the key in that secret. Defaults to `oidc-clientid`.",
          "type": "string",
          "x-go-name": "ClientIDKey"
        },
        "clientSecretKey": {
          "description": "Similar to `clientIDKey`, but for the location of the client secret. Defaults\nto `oidc-clientsecret`.",
          "type": "string",
          "x-go-name": "ClientSecretKey"
        },
        "groupScope": {
          "description": "If your OIDC provider does not return a `groups` object, set this to the user\nattribute to use for binding authenticated users to VDIRoles. Defaults to `groups`.",
          "type": "string",
          "x-go-name": "GroupScope"
        },
        "issuerURL": {
          "description": "The OIDC issuer URL used for discovery",
          "type": "string",
          "x-go-name": "IssuerURL"
        },
        "preserveTokens": {
          "description": "The access tokens returned by the OIDC provider are usually discarded after identify information\nis retrieved from them. If you set this to true, these fields will be available for mapping in\ndesktops at the following paths:\n\n`{{ .Session.Data.access_token }}`\n`{{ .Session.Data.token_type }}`\n`{{ .Session.Data.refresh_token }}`\n`{{ .Session.Data.expiry }}`\n\nNOTE:** This should be considered an insecure option and only turned on taking into account\nthe inherent risks. If the access token used for authorizing actions against the kvdi API gets compromised,\nit would be relatively easy for the attacker to extract this information from the token and use it for\nauthenticating against third-party resources. Additionally, when mapping these values to desktops, they will\nbe stored temporarily in Kubernetes Secrets. The security of those secrets depends highly on your Kubernetes\nRBAC setup and who has access to secrets in the namespace where the Desktop is. So in short, it would be wise to\nonly use this setting in trusted environments where access to the necessary kubernetes APIs is only available to\na select group of administrators, and the risk of the user using a compromised browser is minimal.",
          "type": "boolean",
          "x-go-name": "PreserveTokens"
        },
        "redirectURL": {
          "description": "The redirect URL path configured in the OIDC provider. This should be the full\npath where kvdi is hosted followed by `/api/login`. For example, if `kvdi` is\nhosted at https://kvdi.local, then this value should be set `https://kvdi.local/api/login`.",
          "type": "string",
          "x-go-name": "RedirectURL"
        },
        "scopes": {
          "description": "The scopes to request with the authentication request. Defaults to\n`[\"openid\", \"email\", \"profile\", \"groups\"]`.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Scopes"
        },
        "tlsCACert": {
          "description": "The base64 encoded CA certificate to use when verifying the TLS certificate of\nthe OIDC provider.",
          "type": "string",
          "x-go-name": "TLSCACert"
        },
        "tlsInsecureSkipVerify": {
          "description": "Set to true to skip TLS verification of an OIDC provider.",
          "type": "boolean",
          "x-go-name": "TLSInsecureSkipVerify"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "ObjectFieldSelector": {
      "description": "+structType=atomic",
      "type": "object",
      "title": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "properties": {
        "apiVersion": {
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "fieldPath": {
          "description": "Path of the field to select in the specified API version.",
          "type": "string",
          "x-go-name": "FieldPath"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean",
          "x-go-name": "BlockOwnerDeletion"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.\n+optional",
          "type": "boolean",
          "x-go-name": "Controller"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string",
          "x-go-name": "Name"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "PersistentVolumeAccessMode": {
      "type": "string",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PersistentVolumeClaimSpec": {
      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "AccessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersistentVolumeAccessMode"
          },
          "x-go-name": "AccessModes"
        },
        "dataSource": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "selector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "storageClassName": {
          "description": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional",
          "type": "string",
          "x-go-name": "StorageClassName"
        },
        "volumeMode": {
          "$ref": "#/definitions/PersistentVolumeMode"
        },
        "volumeName": {
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.\n+optional",
          "type": "string",
          "x-go-name": "VolumeName"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PersistentVolumeClaimTemplate": {
      "description": "PersistentVolumeClaimTemplate is used to produce\nPersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
          "type": "string",
          "x-go-name": "CreationTimestamp"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
          "type": "string",
          "x-go-name": "DeletionTimestamp"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/PersistentVolumeClaimSpec"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PersistentVolumeClaimVolumeSource": {
      "description": "This volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system).",
      "type": "object",
      "title": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.",
      "properties": {
        "claimName": {
          "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "type": "string",
          "x-go-name": "ClaimName"
        },
        "readOnly": {
          "description": "Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PersistentVolumeMode": {
      "type": "string",
      "title": "PersistentVolumeMode describes how a volume is intended to be consumed, either Block or Filesystem.",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PhotonPersistentDiskVolumeSource": {
      "type": "object",
      "title": "Represents a Photon Controller persistent disk resource.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string",
          "x-go-name": "FSType"
        },
        "pdID": {
          "description": "ID that identifies Photon Controller persistent disk",
          "type": "string",
          "x-go-name": "PdID"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PodDNSConfig": {
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy.",
      "type": "object",
      "properties": {
        "nameservers": {
          "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Nameservers"
        },
        "options": {
          "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodDNSConfigOption"
          },
          "x-go-name": "Options"
        },
        "searches": {
          "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Searches"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PodDNSConfigOption": {
      "type": "object",
      "title": "PodDNSConfigOption defines DNS resolver options of a pod.",
      "properties": {
        "name": {
          "description": "Required.",
          "type": "string",
          "x-go-name": "Name"
        },
        "value": {
          "description": "+optional",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PortworxVolumeSource": {
      "type": "object",
      "title": "PortworxVolumeSource represents a Portworx volume resource.",
      "properties": {
        "fsType": {
          "description": "FSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string",
          "x-go-name": "FSType"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "volumeID": {
          "description": "VolumeID uniquely identifies a Portworx volume",
          "type": "string",
          "x-go-name": "VolumeID"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ProjectedVolumeSource": {
      "description": "Represents a projected volume source",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "Mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "DefaultMode"
        },
        "sources": {
          "description": "list of volume projections\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeProjection"
          },
          "x-go-name": "Sources"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "PrometheusConfig": {
      "type": "object",
      "title": "PrometheusConfig contains configuration options for a prometheus deployment.",
      "properties": {
        "create": {
          "description": "Set to true to create a prometheus instance.",
          "type": "boolean",
          "x-go-name": "Create"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "ProxyConfig": {
      "type": "object",
      "title": "ProxyConfig represents configurations for the display/audio proxy.",
      "properties": {
        "allowFileTransfer": {
          "description": "AllowFileTransfer will mount the user's home directory inside the kvdi-proxy image.\nThis enables the API endpoint for exploring, downloading, and uploading files to\ndesktop sessions booted from this template. When using a `qemu` configuration with\nSPICE, file upload is enabled by default.",
          "type": "boolean",
          "x-go-name": "AllowFileTransfer"
        },
        "image": {
          "description": "The image to use for the sidecar that proxies mTLS connections to the local\nVNC server inside the Desktop. Defaults to the public kvdi-proxy image\nmatching the version of the currrently running manager.",
          "type": "string",
          "x-go-name": "Image"
        },
        "imagePullPolicy": {
          "$ref": "#/definitions/PullPolicy"
        },
        "pulseServer": {
          "description": "Override the address of the PulseAudio server that the proxy will try to connect to\nwhen serving audio. This defaults to what the ubuntu/arch desktop images are configured\nto do during init, which is to place a socket in the user's run directory. The value is\nassumed to be a unix socket.",
          "type": "string",
          "x-go-name": "PulseServer"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "socketAddr": {
          "description": "The address the display server listens on inside the image. This defaults to the\nUNIX socket `/var/run/kvdi/display.sock`. The kvdi-proxy sidecar will forward\nwebsockify requests validated by mTLS to this socket. Must be in the format of\n`tcp://{host}:{port}` or `unix://{path}`. This will usually be a VNC server unless\nusing a `qemu` configuration with SPICE. If using custom init scripts inside your\ncontainers, this value is set to the `DISPLAY_SOCK_ADDR` environment variable.",
          "type": "string",
          "x-go-name": "SocketAddr"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/desktops/v1"
    },
    "PullPolicy": {
      "description": "PullPolicy describes a policy for if/when to pull a container image",
      "type": "string",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "QEMUConfig": {
      "description": "QEMUConfig represents configurations for running a qemu virtual machine for instances\nbooted from this template.",
      "type": "object",
      "properties": {
        "cloudInitPath": {
          "description": "The path to a pre-built cloud init image to use when booting the VM inside the disk\nimage. Defaults to an auto-generated one at runtime.",
          "type": "string",
          "x-go-name": "CloudInitPath"
        },
        "cpus": {
          "description": "The number of vCPUs to assign the virtual machine. Defaults to 1.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPUs"
        },
        "diskImage": {
          "description": "The container image bundling the disks for this template.",
          "type": "string",
          "x-go-name": "DiskImage"
        },
        "diskImagePullPolicy": {
          "$ref": "#/definitions/PullPolicy"
        },
        "diskPath": {
          "description": "The path to the boot volume inside the disk image. Defaults to `/disk/boot.img`.",
          "type": "string",
          "x-go-name": "DiskPath"
        },
        "memory": {
          "description": "The amount of memory to assign the virtual machine (in MB). Defaults to 1024.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Memory"
        },
        "qemuImage": {
          "description": "The container image containing the QEMU utilities to use to launch the VM.\nDefaults to `ghcr.io/kvdi/kvdi:qemu-latest`.",
          "type": "string",
          "x-go-name": "QEMUImage"
        },
        "qemuImagePullPolicy": {
          "$ref": "#/definitions/PullPolicy"
        },
        "qemuResources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "spice": {
          "description": "Set to true to use the SPICE protocol when proxying the display. If using custom qemu runners,\nthis sets the `SPICE_DISPLAY` environment variable to `true`. The runners provided by this\nrepository will tell qemu to set up a SPICE server at `proxy.socketAddr`. The default is to use\nVNC. This value is also used by the UI to determine which protocol to expect from a display connection.",
          "type": "boolean",
          "x-go-name": "SPICE"
        },
        "useCSI": {
          "description": "Set to true to use the image-populator CSI to mount the disk images to a qemu container.\nYou must have the [image-populator](https://github.com/kubernetes-csi/csi-driver-image-populator)\ndriver installed. Defaults to copying the contents out of the disk image via an init\ncontainer. This is experimental and not really tested.",
          "type": "boolean",
          "x-go-name": "UseCSI"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/desktops/v1"
    },
    "Quantity": {
      "description": "The serialization format is:\n\n\u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n(Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9\n\u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e\n\u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e\n\u003csign\u003e            ::= \"+\" | \"-\"\n\u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e\n\u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e\n\u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\na. No precision is lost\nb. No fractional digits will be emitted\nc. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n1.5 will be serialized as \"1500m\"\n1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true",
      "type": "object",
      "title": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.",
      "x-go-package": "k8s.io/apimachinery/pkg/api/resource"
    },
    "QuobyteVolumeSource": {
      "description": "Quobyte volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "title": "Represents a Quobyte mount that lasts the lifetime of a pod.",
      "properties": {
        "group": {
          "description": "Group to map volume access to\nDefault is no group\n+optional",
          "type": "string",
          "x-go-name": "Group"
        },
        "readOnly": {
          "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "registry": {
          "description": "Registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
          "type": "string",
          "x-go-name": "Registry"
        },
        "tenant": {
          "description": "Tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin\n+optional",
          "type": "string",
          "x-go-name": "Tenant"
        },
        "user": {
          "description": "User to map volume access to\nDefaults to serivceaccount user\n+optional",
          "type": "string",
          "x-go-name": "User"
        },
        "volume": {
          "description": "Volume is a string that references an already created Quobyte volume by name.",
          "type": "string",
          "x-go-name": "Volume"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "RBDVolumeSource": {
      "description": "RBD volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Represents a Rados Block Device mount that lasts the lifetime of a pod.",
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "image": {
          "description": "The rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string",
          "x-go-name": "RBDImage"
        },
        "keyring": {
          "description": "Keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional",
          "type": "string",
          "x-go-name": "Keyring"
        },
        "monitors": {
          "description": "A collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "CephMonitors"
        },
        "pool": {
          "description": "The rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional",
          "type": "string",
          "x-go-name": "RBDPool"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "user": {
          "description": "The rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional",
          "type": "string",
          "x-go-name": "RadosUser"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "Resource": {
      "description": "Resource represents the target of an API action\n+kubebuilder:validation:Enum=users;roles;templates;serviceaccounts;*",
      "type": "string",
      "x-go-package": "github.com/kvdi/kvdi/apis/rbac/v1"
    },
    "ResourceFieldSelector": {
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic",
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Container name: required for volumes, optional for env vars\n+optional",
          "type": "string",
          "x-go-name": "ContainerName"
        },
        "divisor": {
          "$ref": "#/definitions/Quantity"
        },
        "resource": {
          "description": "Required: resource to select",
          "type": "string",
          "x-go-name": "Resource"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ResourceList": {
      "type": "object",
      "title": "ResourceList is a set of (resource name, quantity) pairs.",
      "additionalProperties": {
        "$ref": "#/definitions/Quantity"
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ResourceRequirements": {
      "type": "object",
      "title": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "limits": {
          "$ref": "#/definitions/ResourceList"
        },
        "requests": {
          "$ref": "#/definitions/ResourceList"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "Rule": {
      "description": "Rule represents a set of permissions applied to a VDIRole. It mostly resembles\nan rbacv1.PolicyRule, with resources being a regex and the addition of a\nnamespace selector.",
      "type": "object",
      "properties": {
        "namespaces": {
          "description": "Namespaces this rule applies to. Only evaluated for template launching\npermissions. Including \"*\" as an option matches all namespaces.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Namespaces"
        },
        "resourcePatterns": {
          "description": "Resource regexes that match this rule. This can be template patterns, role\nnames or user names. There is no All representation because * will have\nthat effect on its own when the regex is evaluated. When referring to \"serviceaccounts\",\nonly the \"use\" verb is evaluated in the context of assuming those accounts in\ndesktop sessions.\n\nNOTE**: The `kvdi-manager` is responsible for launching pods with a service account\nrequested for a given Desktop. If the service account itself contains more permissions\nthan the manager itself, the Kubernetes API will deny the request. The way to remedy this\nwould be to either mirror permissions to that ClusterRole, or make the `kvdi-manager` itself a\ncluster admin, both of which come with inherent risks. In the end, you can decide the best\napproach for your use case with regards to exposing access to the Kubernetes APIs via kvdi sessions.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ResourcePatterns"
        },
        "resources": {
          "description": "Resources this rule applies to. ResourceAll matches all resources.\nRecognized options are: `[\"users\", \"roles\", \"templates\", \"serviceaccounts\", \"*\"]`",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "x-go-name": "Resources"
        },
        "verbs": {
          "description": "The actions this rule applies for. VerbAll matches all actions.\nRecognized options are: `[\"create\", \"read\", \"update\", \"delete\", \"use\", \"launch\", \"*\"]`",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Verb"
          },
          "x-go-name": "Verbs"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/rbac/v1"
    },
    "ScaleIOVolumeSource": {
      "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
      "type": "object",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "gateway": {
          "description": "The host address of the ScaleIO API Gateway.",
          "type": "string",
          "x-go-name": "Gateway"
        },
        "protectionDomain": {
          "description": "The name of the ScaleIO Protection Domain for the configured storage.\n+optional",
          "type": "string",
          "x-go-name": "ProtectionDomain"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "sslEnabled": {
          "description": "Flag to enable/disable SSL communication with Gateway, default false\n+optional",
          "type": "boolean",
          "x-go-name": "SSLEnabled"
        },
        "storageMode": {
          "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional",
          "type": "string",
          "x-go-name": "StorageMode"
        },
        "storagePool": {
          "description": "The ScaleIO Storage Pool associated with the protection domain.\n+optional",
          "type": "string",
          "x-go-name": "StoragePool"
        },
        "system": {
          "description": "The name of the storage system as configured in ScaleIO.",
          "type": "string",
          "x-go-name": "System"
        },
        "volumeName": {
          "description": "The name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
          "type": "string",
          "x-go-name": "VolumeName"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "SecretKeySelector": {
      "description": "+structType=atomic",
      "type": "object",
      "title": "SecretKeySelector selects a key of a Secret.",
      "properties": {
        "key": {
          "description": "The key of the secret to select from.  Must be a valid secret key.",
          "type": "string",
          "x-go-name": "Key"
        },
        "name": {
          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined\n+optional",
          "type": "boolean",
          "x-go-name": "Optional"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "SecretProjection": {
      "description": "The contents of the target Secret's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names.\nNote that this is identical to a secret volume source without the default\nmode.",
      "type": "object",
      "title": "Adapts a secret into a projected volume.",
      "properties": {
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          },
          "x-go-name": "Items"
        },
        "name": {
          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined\n+optional",
          "type": "boolean",
          "x-go-name": "Optional"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "SecretVolumeSource": {
      "description": "The contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "title": "Adapts a Secret into a volume.",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional",
          "type": "integer",
          "format": "int32",
          "x-go-name": "DefaultMode"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          },
          "x-go-name": "Items"
        },
        "optional": {
          "description": "Specify whether the Secret or its keys must be defined\n+optional",
          "type": "boolean",
          "x-go-name": "Optional"
        },
        "secretName": {
          "description": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional",
          "type": "string",
          "x-go-name": "SecretName"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "SecretsConfig": {
      "type": "object",
      "title": "SecretsConfig configurese the backend for secrets management.",
      "properties": {
        "k8sSecret": {
          "$ref": "#/definitions/K8SSecretConfig"
        },
        "vault": {
          "$ref": "#/definitions/VaultConfig"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "ServiceAccountTokenProjection": {
      "description": "ServiceAccountTokenProjection represents a projected service account token\nvolume. This projection can be used to insert a service account token into\nthe pods runtime filesystem for use against APIs (Kubernetes API Server or\notherwise).",
      "type": "object",
      "properties": {
        "audience": {
          "description": "Audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional",
          "type": "string",
          "x-go-name": "Audience"
        },
        "expirationSeconds": {
          "description": "ExpirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ExpirationSeconds"
        },
        "path": {
          "description": "Path is the path relative to the mount point of the file to project the\ntoken into.",
          "type": "string",
          "x-go-name": "Path"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "ServiceMonitorConfig": {
      "type": "object",
      "title": "ServiceMonitorConfig contains configuration options for creating a ServiceMonitor.",
      "properties": {
        "create": {
          "description": "Set to true to create a ServiceMonitor object for the kvdi metrics.",
          "type": "boolean",
          "x-go-name": "Create"
        },
        "labels": {
          "description": "Extra labels to apply to the ServiceMonitor object. Set these to the selector\nin your prometheus-operator configuration (usually `{\"release\": \"\u003chelm_release_name\u003e\"}`).\nDefaults to `{\"release\": \"prometheus\"}`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "ServiceType": {
      "description": "Service Type string describes ingress methods for a service",
      "type": "string",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "SessionResponse": {
      "description": "SessionResponse represents a response with a new session token",
      "type": "object",
      "properties": {
        "authorized": {
          "description": "Whether the user is fully authorized (e.g. false if MFA is required but not provided yet)",
          "type": "boolean",
          "x-go-name": "Authorized"
        },
        "expiresAt": {
          "description": "The time the token expires.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ExpiresAt"
        },
        "renewable": {
          "description": "Whether an HttpOnly was sent back with the request enabling token refresh.",
          "type": "boolean",
          "x-go-name": "Renewable"
        },
        "state": {
          "description": "The state secret generated by the client",
          "type": "string",
          "x-go-name": "State"
        },
        "token": {
          "description": "The X-Session-Token to use for future requests.",
          "type": "string",
          "x-go-name": "Token"
        },
        "user": {
          "$ref": "#/definitions/VDIUser"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "StatDesktopFileResponse": {
      "description": "StatDesktopFileResponse contains the info for a queried file inside a desktop\ndession.",
      "type": "object",
      "properties": {
        "stat": {
          "$ref": "#/definitions/FileStat"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "StorageMedium": {
      "type": "string",
      "title": "StorageMedium defines ways that storage can be allocated to a volume.",
      "x-go-package": "k8s.io/api/core/v1"
    },
    "StorageOSVolumeSource": {
      "type": "object",
      "title": "Represents a StorageOS persistent volume resource.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "volumeName": {
          "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
          "type": "string",
          "x-go-name": "VolumeName"
        },
        "volumeNamespace": {
          "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional",
          "type": "string",
          "x-go-name": "VolumeNamespace"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "TLSConfig": {
      "type": "object",
      "title": "TLSConfig contains TLS configurations for kVDI.",
      "properties": {
        "serverSecret": {
          "description": "A pre-existing TLS secret to use for the HTTPS listener. If not defined,\na certificate is generated.",
          "type": "string",
          "x-go-name": "ServerSecret"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "Template": {
      "description": "Template is the Schema for the templates API",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
          "type": "string",
          "x-go-name": "CreationTimestamp"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
          "type": "string",
          "x-go-name": "DeletionTimestamp"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/TemplateSpec"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/desktops/v1"
    },
    "TemplateSpec": {
      "description": "TemplateSpec defines the desired state of Template",
      "type": "object",
      "properties": {
        "desktop": {
          "$ref": "#/definitions/DesktopConfig"
        },
        "dind": {
          "$ref": "#/definitions/DockerInDockerConfig"
        },
        "imagePullSecrets": {
          "description": "Any pull secrets required for pulling the container image.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalObjectReference"
          },
          "x-go-name": "ImagePullSecrets"
        },
        "proxy": {
          "$ref": "#/definitions/ProxyConfig"
        },
        "qemu": {
          "$ref": "#/definitions/QEMUConfig"
        },
        "tags": {
          "description": "Arbitrary tags for displaying in the app UI.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "volumes": {
          "description": "Additional volumes to attach to pods booted from this template. To mount them there\nmust be corresponding `volumeMounts` or `volumeDevices` specified.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-go-name": "Volumes"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/desktops/v1"
    },
    "TypedLocalObjectReference": {
      "description": "TypedLocalObjectReference contains enough information to let you locate the\ntyped referenced object inside the same namespace.\n+structType=atomic",
      "type": "object",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional",
          "type": "string",
          "x-go-name": "APIGroup"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "UID": {
      "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
      "type": "string",
      "x-go-package": "k8s.io/apimachinery/pkg/types"
    },
    "UpdateMFARequest": {
      "description": "a provisioning URI will be returned.",
      "type": "object",
      "title": "UpdateMFARequest sets the MFA configuration for the user. If enabling,",
      "properties": {
        "enabled": {
          "description": "When set, will enable MFA for the given user. If false, will disable MFA.",
          "type": "boolean",
          "x-go-name": "Enabled"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "UpdateRoleRequest": {
      "description": "UpdateRoleRequest requests updates to an existing role. The existing attributes\nwill be entirely replaced with those supplied in the payload.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "The new annotations for the role",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "rules": {
          "description": "The new rules for the role.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-go-name": "Rules"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "UpdateUserRequest": {
      "description": "UpdateUserRequest requests updates to an existing user. Not all auth\nproviders will be able to implement this route and can instead return an\nerror describing why.",
      "type": "object",
      "properties": {
        "password": {
          "description": "When populated, will change the password for the user.",
          "type": "string",
          "x-go-name": "Password"
        },
        "roles": {
          "description": "When populated will change the roles for the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Roles"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "UserMFAStatus": {
      "description": "UserMFAStatus contains information about the MFA configurations\nfor the user.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-go-name": "Enabled"
        },
        "verified": {
          "type": "boolean",
          "x-go-name": "Verified"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "UserdataSelector": {
      "description": "UserdataSelector represents a means for selecting pre-existing userdata PVCs based off\na label or name match. Note that you will need to restrict templates to launching in\nnamespaces that contain the PVCs yourself.",
      "type": "object",
      "properties": {
        "matchLabel": {
          "description": "MatchLabel is a label **key** to use to select a PVC for the user. The value will in the\nselector will be the name of the user launching the session. Use this if your usernames\nmay not always be DNS compliant.",
          "type": "string",
          "x-go-name": "MatchLabel"
        },
        "matchName": {
          "description": "MatchName is a pattern to match for the name of the PVC. The string ${USERNAME} will be\nreplaced in the pattern with the actual username when searching for the volume. Note, this\nwill only work if usernames are DNS compliant.",
          "type": "string",
          "x-go-name": "MatchName"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "UserdataSpec": {
      "description": "UserdataSpec is an inline of the corev1 PersistentVolumeClaimSpec. It contains\nadditional fields for controlling how kvdi works with volumes.",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "AccessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersistentVolumeAccessMode"
          },
          "x-go-name": "AccessModes"
        },
        "dataSource": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "retainPVCs": {
          "description": "RetainPVCs tells the desktop controller to leave PVCs in-tact after they\nare allocated for a user. The default behavior is to free the volume from\nthe PVC after each desktop session so it can be used across other namespaces.\nNote that if you set this value to `true` users will only be able to launch\nsessions in a single namespace (unless the PVC is manually removed).",
          "type": "boolean",
          "x-go-name": "RetainPVCs"
        },
        "selector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "storageClassName": {
          "description": "Name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional",
          "type": "string",
          "x-go-name": "StorageClassName"
        },
        "volumeMode": {
          "$ref": "#/definitions/PersistentVolumeMode"
        },
        "volumeName": {
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.\n+optional",
          "type": "string",
          "x-go-name": "VolumeName"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "VDIRole": {
      "description": "VDIRole is the Schema for the vdiroles API",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
          "type": "string",
          "x-go-name": "CreationTimestamp"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
          "type": "string",
          "x-go-name": "DeletionTimestamp"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "rules": {
          "description": "A list of rules granting access to resources in the VDICluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-go-name": "Rules"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/rbac/v1"
    },
    "VDIUser": {
      "description": "VDIUser represents a user in kVDI. It is the auth providers responsibility\nto take an authentication request and generate a JWT with claims defining\nthis object.",
      "type": "object",
      "properties": {
        "mfa": {
          "$ref": "#/definitions/UserMFAStatus"
        },
        "name": {
          "description": "A unique name for the user",
          "type": "string",
          "x-go-name": "Name"
        },
        "roles": {
          "description": "A list of roles applide to the user. The grants associated with each user\nare embedded in the JWT signed when authenticating.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VDIUserRole"
          },
          "x-go-name": "Roles"
        },
        "sessions": {
          "description": "Any active sessions for the user - new field that is only populated on a\napi/whoami request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DesktopSession"
          },
          "x-go-name": "Sessions"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "VDIUserRole": {
      "description": "VDIUserRole represents a VDIRole, but only with the data that is to be\nembedded in the JWT. Primarily, leaving out useless metadata that will inflate\nthe token.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the role, this must match the VDIRole from which this object\nderives.",
          "type": "string",
          "x-go-name": "Name"
        },
        "rules": {
          "description": "The rules for this role.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-go-name": "Rules"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/pkg/types"
    },
    "VaultConfig": {
      "type": "object",
      "title": "VaultConfig represents the configurations for connecting to a vault server.",
      "properties": {
        "address": {
          "description": "The full URL to the vault server. Same as the `VAULT_ADDR` variable.",
          "type": "string",
          "x-go-name": "Address"
        },
        "authRole": {
          "description": "The auth role to assume when authenticating against vault. Defaults to `kvdi`.",
          "type": "string",
          "x-go-name": "AuthRole"
        },
        "caCertBase64": {
          "description": "The base64 encoded CA certificate for verifying the vault server certificate.",
          "type": "string",
          "x-go-name": "CACertBase64"
        },
        "insecure": {
          "description": "Set to true to disable TLS verification.",
          "type": "boolean",
          "x-go-name": "Insecure"
        },
        "secretsPath": {
          "description": "The base path to store secrets in vault. \"Keys\" for other configurations in the\ncontext of the vault backend can be put at `\u003csecretsPath\u003e/\u003csecretKey\u003e.data`. This\nwill change in the future to support keys inside the secret itself, instead of assuming\n`data`.",
          "type": "string",
          "x-go-name": "SecretsPath"
        },
        "tlsServerName": {
          "description": "Optionally set the SNI when connecting using HTTPS.",
          "type": "string",
          "x-go-name": "TLSServerName"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    },
    "Verb": {
      "description": "Verb represents an API action\n+kubebuilder:validation:Enum=create;read;update;delete;use;launch;*",
      "type": "string",
      "x-go-package": "github.com/kvdi/kvdi/apis/rbac/v1"
    },
    "Volume": {
      "type": "object",
      "title": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/definitions/AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/definitions/AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/definitions/AzureFileVolumeSource"
        },
        "cephfs": {
          "$ref": "#/definitions/CephFSVolumeSource"
        },
        "cinder": {
          "$ref": "#/definitions/CinderVolumeSource"
        },
        "configMap": {
          "$ref": "#/definitions/ConfigMapVolumeSource"
        },
        "csi": {
          "$ref": "#/definitions/CSIVolumeSource"
        },
        "downwardAPI": {
          "$ref": "#/definitions/DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "$ref": "#/definitions/EmptyDirVolumeSource"
        },
        "ephemeral": {
          "$ref": "#/definitions/EphemeralVolumeSource"
        },
        "fc": {
          "$ref": "#/definitions/FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/definitions/FlexVolumeSource"
        },
        "flocker": {
          "$ref": "#/definitions/FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "$ref": "#/definitions/GitRepoVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/definitions/GlusterfsVolumeSource"
        },
        "hostPath": {
          "$ref": "#/definitions/HostPathVolumeSource"
        },
        "iscsi": {
          "$ref": "#/definitions/ISCSIVolumeSource"
        },
        "name": {
          "description": "Volume's name.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string",
          "x-go-name": "Name"
        },
        "nfs": {
          "$ref": "#/definitions/NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/definitions/PortworxVolumeSource"
        },
        "projected": {
          "$ref": "#/definitions/ProjectedVolumeSource"
        },
        "quobyte": {
          "$ref": "#/definitions/QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/definitions/RBDVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/definitions/ScaleIOVolumeSource"
        },
        "secret": {
          "$ref": "#/definitions/SecretVolumeSource"
        },
        "storageos": {
          "$ref": "#/definitions/StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/VsphereVirtualDiskVolumeSource"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "VolumeDevice": {
      "type": "object",
      "title": "volumeDevice describes a mapping of a raw block device within a container.",
      "properties": {
        "devicePath": {
          "description": "devicePath is the path inside of the container that the device will be mapped to.",
          "type": "string",
          "x-go-name": "DevicePath"
        },
        "name": {
          "description": "name must match the name of a persistentVolumeClaim in the pod",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "VolumeMount": {
      "type": "object",
      "title": "VolumeMount describes a mounting of a Volume within a container.",
      "properties": {
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
          "type": "string",
          "x-go-name": "MountPath"
        },
        "mountPropagation": {
          "$ref": "#/definitions/MountPropagationMode"
        },
        "name": {
          "description": "This must match the Name of a Volume.",
          "type": "string",
          "x-go-name": "Name"
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional",
          "type": "boolean",
          "x-go-name": "ReadOnly"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional",
          "type": "string",
          "x-go-name": "SubPath"
        },
        "subPathExpr": {
          "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.\n+optional",
          "type": "string",
          "x-go-name": "SubPathExpr"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "VolumeProjection": {
      "description": "Projection that may be projected along with other supported volume types",
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/ConfigMapProjection"
        },
        "downwardAPI": {
          "$ref": "#/definitions/DownwardAPIProjection"
        },
        "secret": {
          "$ref": "#/definitions/SecretProjection"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/ServiceAccountTokenProjection"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "VsphereVirtualDiskVolumeSource": {
      "type": "object",
      "title": "Represents a vSphere volume resource.",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional",
          "type": "string",
          "x-go-name": "FSType"
        },
        "storagePolicyID": {
          "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n+optional",
          "type": "string",
          "x-go-name": "StoragePolicyID"
        },
        "storagePolicyName": {
          "description": "Storage Policy Based Management (SPBM) profile name.\n+optional",
          "type": "string",
          "x-go-name": "StoragePolicyName"
        },
        "volumePath": {
          "description": "Path that identifies vSphere volume vmdk",
          "type": "string",
          "x-go-name": "VolumePath"
        }
      },
      "x-go-package": "k8s.io/api/core/v1"
    },
    "WebmeshConfig": {
      "description": "WebmeshConfig represents configurations for using a webmesh cluster as the\nauthentication backend.",
      "type": "object",
      "properties": {
        "metadataURL": {
          "description": "MetadataURL is the URL to the webmesh metadata endpoint. This is used for\nvalidating the JWT token.",
          "type": "string",
          "x-go-name": "MetadataURL"
        }
      },
      "x-go-package": "github.com/kvdi/kvdi/apis/app/v1"
    }
  },
  "responses": {
    "boolResponse": {
      "description": "Success response",
      "schema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "x-go-name": "Ok"
          }
        }
      }
    },
    "configResponse": {
      "description": "Config response",
      "schema": {
        "type": "object",
        "properties": {
          "app": {
            "$ref": "#/definitions/AppConfig"
          },
          "appNamespace": {
            "description": "The namespace to provision application resurces in. Defaults to the `default`\nnamespace",
            "type": "string",
            "x-go-name": "AppNamespace"
          },
          "auth": {
            "$ref": "#/definitions/AuthConfig"
          },
          "desktops": {
            "$ref": "#/definitions/DesktopsConfig"
          },
          "imagePullSecrets": {
            "description": "Pull secrets to use when pulling container images",
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocalObjectReference"
            },
            "x-go-name": "ImagePullSecrets"
          },
          "metrics": {
            "$ref": "#/definitions/MetricsConfig"
          },
          "secrets": {
            "$ref": "#/definitions/SecretsConfig"
          },
          "userdataSelector": {
            "$ref": "#/definitions/UserdataSelector"
          },
          "userdataSpec": {
            "$ref": "#/definitions/UserdataSpec"
          }
        }
      }
    },
    "desktopSessionsResponse": {
      "description": "Desktop Sessions Response",
      "schema": {
        "$ref": "#/definitions/DesktopSessionsResponse"
      }
    },
    "error": {
      "description": "A generic error response",
      "schema": {
        "$ref": "#/definitions/APIError"
      }
    },
    "getLogsResponse": {
      "description": "Desktop logs response"
    },
    "getMFAResponse": {
      "description": "Session response",
      "schema": {
        "$ref": "#/definitions/MFAResponse"
      }
    },
    "getSessionResponse": {
      "description": "Session status response",
      "schema": {
        "type": "object",
        "additionalProperties": {}
      }
    },
    "namespacesResponse": {
      "description": "Namespaces response",
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "postSessionResponse": {
      "description": "New session response",
      "schema": {
        "$ref": "#/definitions/CreateSessionResponse"
      }
    },
    "roleResponse": {
      "description": "A single role",
      "schema": {
        "$ref": "#/definitions/VDIRole"
      }
    },
    "rolesResponse": {
      "description": "A list of roles",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/VDIRole"
        }
      }
    },
    "serviceAccountsResponse": {
      "description": "Service Accounts Response",
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "sessionResponse": {
      "description": "Session response",
      "schema": {
        "$ref": "#/definitions/SessionResponse"
      }
    },
    "statDesktopFileResponse": {
      "description": "File stat response",
      "schema": {
        "$ref": "#/definitions/StatDesktopFileResponse"
      }
    },
    "templateResponse": {
      "description": "Templates response",
      "schema": {
        "$ref": "#/definitions/Template"
      }
    },
    "templatesResponse": {
      "description": "Templates response",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Template"
        }
      }
    },
    "updateMFAResponse": {
      "description": "Session response",
      "schema": {
        "$ref": "#/definitions/MFAResponse"
      }
    },
    "userResponse": {
      "description": "A single user",
      "schema": {
        "$ref": "#/definitions/VDIUser"
      }
    },
    "usersResponse": {
      "description": "A list of users",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/VDIUser"
        }
      }
    },
    "verifyUserMFAResponse": {
      "description": "Response with mfa details for the user",
      "schema": {
        "$ref": "#/definitions/MFAResponse"
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Session-Token",
      "in": "head"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ]
}
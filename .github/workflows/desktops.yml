name: Desktops

on:
  workflow_dispatch:
  push:
    tags: [v*]

env:
  IMAGE_PREFIX: ghcr.io/webmeshproj/desktop
  PLATFORMS: linux/amd64,linux/arm64
  ARCHS: amd64,arm64
  VERSION: latest
  COSIGN_EXPERIMENTAL: 1

jobs:
  build:
    name: Build Images
    runs-on: self-hosted
    permissions:
      contents: "write"
      id-token: "write"
      packages: "write"
    strategy:
      fail-fast: false
      matrix:
        docker-context:
          - build/desktops/ubuntu
          - build/desktops/app-profiles
          - build/desktops/dosbox
        include:
          - name: Ubuntu Base Image
            docker-context: build/desktops/ubuntu
            dockerfile: Dockerfile.base
            tag-suffix: ubuntu-base
            cache-dep-path: build/desktops/ubuntu/Dockerfile.base

          - name: App Base Image
            docker-context: build/desktops/app-profiles
            dockerfile: Dockerfile.base
            tag-suffix: apps-base
            cache-dep-path: build/desktops/app-profiles/Dockerfile.base

          - name: DOSBox Image
            docker-context: build/desktops/dosbox
            dockerfile: Dockerfile.base
            tag-suffix: dosbox-base
            cache-dep-path: build/desktops/dosbox/Dockerfile.base

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.ARCHS }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ${{ matrix.name }}
        uses: docker/build-push-action@v5
        id: base-build
        with:
          context: ${{ matrix.docker-context }}
          file: ${{ matrix.docker-context }}/${{ matrix.dockerfile }}
          push: true
          tags: ${{ env.IMAGE_PREFIX }}-${{ matrix.tag-suffix }}:${{ env.VERSION }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=local,src=/home/runner/.${{ matrix.tag-suffix }}.buildx-cache
          cache-to: type=local,dest=/home/runner/.${{ matrix.tag-suffix }}.buildx-cache

      # Do the same again for Xfce4 and KDE if this is the ubuntu build

      - name: Build ${{ matrix.name }} With Xfce4
        uses: docker/build-push-action@v5
        if: ${{ matrix.docker-context == 'build/desktops/ubuntu' }}
        id: xfce4-build
        with:
          context: ${{ matrix.docker-context }}
          file: ${{ matrix.docker-context }}/Dockerfile.desktop
          push: true
          tags: ${{ env.IMAGE_PREFIX }}-${{ matrix.tag-suffix }}-xfce4:${{ env.VERSION }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=local,src=/home/runner/.${{ matrix.tag-suffix }}.buildx-cache
          cache-to: type=local,dest=/home/runner/.${{ matrix.tag-suffix }}.buildx-cache
          build-args: DESKTOP_PACKAGE=xfce4

      - name: Build ${{ matrix.name }} With KDE
        uses: docker/build-push-action@v5
        if: ${{ matrix.docker-context == 'build/desktops/ubuntu' }}
        id: kde-build
        with:
          context: ${{ matrix.docker-context }}
          file: ${{ matrix.docker-context }}/Dockerfile.desktop
          push: true
          tags: ${{ env.IMAGE_PREFIX }}-${{ matrix.tag-suffix }}-kde:${{ env.VERSION }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=local,src=/home/runner/.${{ matrix.tag-suffix }}.buildx-cache
          cache-to: type=local,dest=/home/runner/.${{ matrix.tag-suffix }}.buildx-cache
          build-args: DESKTOP_PACKAGE=kde-standard
